<!DOCTYPE html>
<html lang="#{sessionBean.lang}"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui"
	xmlns:pe="http://primefaces.org/ui/extensions">

<f:view locale="#{sessionBean.locale}" encoding="UTF-8" contentType="text/html">

<p:importEnum type="es.caib.sistrages.core.api.model.types.TypePlugin" var="TypePlugin"/>


<h:head>
	<title><h:outputText value="#{msg['dialogPlugin.titulo']}"/></title>
	<style type="text/css">
		.dContents{
			display:contents;
		}

	</style>
</h:head>

<h:body>
	<f:facet name="last">
		<h:outputStylesheet library="css" name="style.css" />
	</f:facet>

	<!-- Parametros dialogo -->
	<f:metadata>
		<f:viewParam name="MODO_ACCESO" value="#{dialogPlugin.modoAcceso}"/>
		<f:viewParam name="ID" value="#{dialogPlugin.id}"/>
		<f:viewParam name="AMBITO" value="#{dialogPlugin.ambito}"/>
		<f:viewAction action="#{dialogPlugin.init}" />
	</f:metadata>
	<h:form id="dialogPlugin" styleClass="margin-top-10">

            <p:contextMenu id="mainCm" widgetVar="mainCm">
                <p:menuitem id="mnuCopy" value="#{msg['botones.copiar']}" icon="fa fa-clipboard" styleClass="w90" process="@this :dialogPlugin:auxCopiar" update="growlDialog" />
            </p:contextMenu>
            <pe:clipboard id="clipContextCopy" trigger="mnuCopy" action="copy" target="auxCopiar">
                <p:ajax event="success" listener="#{dialogPlugin.copiadoCorr}" process="@this" update="@this growlDialog"/>
                <p:ajax event="error" listener="#{dialogPlugin.copiadoErr}" update="@this growlDialog"/>
            </pe:clipboard>

           <p:inputText id="auxCopiar" value="#{dialogPlugin.portapapeles}" style="padding:0px; opacity:0; width: 1px; height:1px; cursor:default;"/>

  			<p:outputPanel style="height:497px;">
				<!-- Contenido dialogo -->
				<!-- Growl mensajes -->
				<p:growl id="growlDialog" widgetVar="growlDialog" life="#{sessionBean.growlLife}" sticky="#{sessionBean.growlSticky}" />

				<h:panelGrid rowClasses=", ui-datatable-odd" columnClasses="w15 dContents, w75, wpx25" columns = "3" cellpadding = "5" cellspacing = "0"  style="width:100%;">

					<p:outputLabel for="tipo" value="#{msg['dialogPlugin.headerTipo']}" style="padding-left: 2px; display: block;"/>
					<p:selectOneMenu id="tipo" value="#{dialogPlugin.data.tipo}"  required="true" disabled="#{dialogPlugin.isConsulta()}" style="width:94%;">
    					 <f:selectItems value="#{dialogPlugin.tipos}" var="tipo" itemLabel="#{msg['typePlugin.' += tipo]}"/>
					</p:selectOneMenu >
					<p:outputLabel value=""/>

					<p:outputLabel for="valor" value="#{msg['dialogPlugin.headerClassname']}" style="padding-left: 2px; display: block;"/>
					<p:inputText id="valor" value="#{dialogPlugin.data.realClassname}" readonly="#{dialogPlugin.isReal ? false : true}" required="false" style="width:98%;" maxlength="500">
						<p:ajax event="keyup" process="@this" />
					</p:inputText>
					<p:outputLabel value="" />

					<p:outputLabel for="mockClassname" value="#{msg['dialogPlugin.headerMockClassname']}" style="padding-left: 2px; display: block;"/>
					<p:inputText id="mockClassname" value="#{dialogPlugin.data.mockClassname}" readonly="#{dialogPlugin.isReal ? true : false}" required="false" style="width:98%;" maxlength="500">
						<p:ajax event="keyup" process="@this" />
					</p:inputText>
					<p:outputLabel value="" />

					<p:outputLabel for="descripcion" value="#{msg['dialogPlugin.headerDescripcion']}" style="padding-left: 2px; display: block;"/>
					<p:inputText id="descripcion" value="#{dialogPlugin.data.descripcion}" readonly="#{dialogPlugin.isConsulta()}" required="true" style="width:98%;" maxlength="255"/>
					<p:outputLabel value="" />

					<p:outputLabel for="prefijoPropiedades" value="#{msg['dialogPlugin.headerPrefijo']}" style="padding-left: 2px; display: block;"/>
					<p:inputText id="prefijoPropiedades" value="#{dialogPlugin.data.prefijoPropiedades}" readonly="#{dialogPlugin.isConsulta()}" style="width:98%;" maxlength="100"/>
					<p:outputLabel value="" />

   					<p:outputLabel for="dataTablePropiedades" value="#{msg['dialogPlugin.headerPropiedad']}" style="padding-left: 2px; display: block;"/>
					<p:dataTable  id="dataTablePropiedades" var="td" value="#{dialogPlugin.data.propiedades}"
								  rows="25" emptyMessage="#{msg['error.emptyRows']}" scrollable="true" scrollHeight="343"
								  paginator="false" selectionMode="single" selection="#{dialogPlugin.propiedadSeleccionada}" rowKey="#{td.codigo}">

						<!-- Necesario para actualizar en controlador la fila seleccionada -->
						<p:ajax event="rowSelect" global="false" />
						<p:ajax event="rowUnselect" />
						<p:ajax event="rowDblselect"
		                  		oncomplete="rcEditarPropiedad();"
		                        disabled="#{dialogPlugin.isConsulta()}"
		                        />
		                <p:ajax event="contextMenu" global="false" process="@this" update="@form:botones"/>

						<!-- Columnas -->
					    <p:column headerText="#{msg['dialogPlugin.headerParametros.codigo']}" class="ui-panelgrid-cell">
					        <h:outputText value="#{td.codigo}" />
					    </p:column>

					    <p:column headerText="#{msg['dialogPlugin.headerParametros.valor']}" class="ui-panelgrid-cell">
					        <h:outputText value="#{td.valor}" />
					    </p:column>

		 			</p:dataTable>
		 			<p:column id="botones" style="margin-left: 0px">
						    <p>
					    		<p:commandButton id="btnNuevaPropiedad" icon="fa fa-plus" title="#{msg['botones.nuevo']}" actionListener="#{dialogPlugin.nuevaPropiedad()}" process="@this" update="growlDialog" rendered="#{dialogPlugin.isAlta() or dialogPlugin.isEdicion()}">
	        						<p:ajax event="dialogReturn" listener="#{dialogPlugin.returnDialogo}" update="growlDialog dataTablePropiedades"/>
	        					</p:commandButton>
	        				</p>
	        				<p>
					    		<p:commandButton id="btnEditarPropiedad" icon="fa fa-edit" title="#{msg['botones.editar']}" actionListener="#{dialogPlugin.editarPropiedad()}" process="@this" update="growlDialog" rendered="#{dialogPlugin.isAlta() or dialogPlugin.isEdicion()}">
	        						<p:ajax event="dialogReturn" listener="#{dialogPlugin.returnDialogo}" update="growlDialog dataTablePropiedades"/>
	        					</p:commandButton>
	        				</p>
					    	<p>
					    		<p:commandButton id="btnEliminarPropiedad" icon="fa fa-minus"  title="#{msg['botones.eliminar']}" actionListener="#{dialogPlugin.quitarPropiedad()}" process="@this" update="growlDialog dataTablePropiedades" rendered="#{dialogPlugin.isAlta() or dialogPlugin.isEdicion()}">
					    			<p:confirm header="#{msg['confirm.titulo']}" message="#{msg['confirm.borrado']}" icon="fa fa-question-circle fa-3x confirmar_icono"/>
					    		</p:commandButton>
					    	</p>
					    	<p>
					    		<p:commandButton icon="fa fa-arrow-up" title="#{msg['botones.subir']}" actionListener="#{dialogPlugin.subirPropiedad()}" process="@this" update="growlDialog dataTablePropiedades" rendered="#{dialogPlugin.isAlta() or dialogPlugin.isEdicion()}"/>
					    	</p>
					    	<p>
					    		<p:commandButton icon="fa fa-arrow-down" title="#{msg['botones.bajar']}" actionListener="#{dialogPlugin.bajarPropiedad()}" process="@this" update="growlDialog dataTablePropiedades" rendered="#{dialogPlugin.isAlta() or dialogPlugin.isEdicion()}"/>
					    	</p>
					</p:column>

					<p:commandButton id="switchButton" value="#{dialogPlugin.isReal ? msg['botones.switchMock'] : msg['botones.switchReal']}" actionListener="#{dialogPlugin.switchClassname()}" process="@this" update="@this growlDialog valor mockClassname" style="margin-top: 5px;"/>

				</h:panelGrid>
				<h:outputScript rendered="#{!dialogPlugin.isConsulta()}">
				      function rcEditarPropiedad() {
				      	document.getElementById("dialogPlugin:btnEditarPropiedad").click();
				      }

				      function  rcBorrarPropiedad() {
				      	document.getElementById("dialogPlugin:btnEliminarPropiedad").click();
				      }
			    </h:outputScript>
			</p:outputPanel>
		  	 <p:outputPanel styleClass="botonera">
		     	<p:toolbar>
					<f:facet name="right">
		        		<p:commandButton value="#{msg['botones.guardar']}" actionListener="#{dialogPlugin.aceptar()}" process="@form" update="@form growlDialog"  styleClass="boton-azul" rendered="#{dialogPlugin.isAlta() or dialogPlugin.isEdicion()}"/>
						<p:commandButton value="#{msg['botones.cancelar']}" actionListener="#{dialogPlugin.cancelar()}" process="@this"  rendered="#{dialogPlugin.isAlta() or dialogPlugin.isEdicion()}"/>
						<p:commandButton value="#{msg['botones.cerrar']}" actionListener="#{dialogPlugin.cancelar()}" process="@this"  rendered="#{dialogPlugin.isConsulta()}"/>
						<p:commandButton id="btnHelp" value="#{msg['botones.ayuda']}" icon="fa fa-question-circle-o" actionListener="#{dialogPlugin.ayuda}" process="@this"/>
					</f:facet>
				</p:toolbar>
		    </p:outputPanel>

			<!-- dialogo para confirmar -->
            <p:confirmDialog global="true" >
                <p:outputPanel styleClass="confirmar_botonera">
                    <p:commandButton value="#{msg['botones.si']}" type="button" styleClass="ui-confirmdialog-yes boton-azul" icon="fa fa-check"  process="@form"/>
                    <p:commandButton value="#{msg['botones.no']}" type="button" styleClass="ui-confirmdialog-no" icon="fa fa-close" process="@this"/>
                </p:outputPanel>
            </p:confirmDialog>

		    <p:contextMenu for="dataTablePropiedades" id="cMenuPropiedades" widgetVar="cMenuPropiedadesWV" beforeShow="return true;">
                <p:menuitem id="mnuCopyPropiedades" value="#{msg['botones.copiar']}" icon="fa fa-clipboard" styleClass="w90" process="@this :dialogPlugin:auxCopiar" update="growlDialog" />
                <p:separator/>
				<p:menuitem id="mnuNuevoPropiedades" value="#{msg['botones.nuevo']}" icon="fa fa-file" process="@this" onclick="document.getElementById('dialogPlugin:btnNuevaPropiedad').click();" />
				<p:menuitem id="mnuEditarPropiedades" value="#{msg['botones.editar']}" icon="fa fa-edit" process="@this" onclick="document.getElementById('dialogPlugin:btnEditarPropiedad').click();"/>
				<p:menuitem id="mnuEliminarPropiedades" value="#{msg['botones.eliminar']}" icon="fa fa-trash-o" process="@this" onclick="document.getElementById('dialogPlugin:btnEliminarPropiedad').click();" />
            </p:contextMenu>
            <pe:clipboard id="clipContextCopyPropiedades" trigger="mnuCopyPropiedades" action="copy" target="auxCopiar">
                <p:ajax event="success" listener="#{dialogPlugin.copiadoCorr}" process="@this" update="@this growlDialog"/>
                <p:ajax event="error" listener="#{dialogPlugin.copiadoErr}" update="@this growlDialog"/>
            </pe:clipboard>

            <h:outputScript >

	             var arrayCm = [];
					
				  window.onload=function(){
	                let contextMenu =  document.getElementsByClassName('ui-contextmenu')[0];
	                onVisible(contextMenu, () => eliminarResaltar());



	               document.addEventListener('contextmenu', function(ev) {
	                    ev.preventDefault();
	                    getPos();
	                    return false;
	                }, false);
	              }



	               function eliminarResaltar(){
	                    let contextMenu =  document.getElementsByClassName('ui-contextmenu')[0];
	                      let elementos = document.getElementsByClassName('resaltar');
	                      if(contextMenu!=null &amp;&amp; contextMenu.style.display=='none' &amp;&amp; elementos.length &gt; 0){
	                        for(let i = 0; i &lt; elementos.length; i++){
	                            elementos[i].classList.remove('resaltar');
	                        }
	                      }
	                }



	               function onVisible(element, callback) {
	                  new IntersectionObserver((entries, observer) => {
	                    entries.forEach(entry => {
	                      if(entry.intersectionRatio == 0) {
	                        callback(element);
	                      }
	                    });
	                  }).observe(element);
	                }


	             function getPos(){
	                 var e = window.event;



	               var posX = e.clientX;
	                var posY = e.clientY;
	                var el = document.elementFromPoint(posX, posY);



	               let elementos = document.getElementsByClassName('resaltar');
	                      if(elementos.length &gt; 0){
	                        for(let i = 0; i &lt; elementos.length; i++){
	                            elementos[i].classList.remove('resaltar');
	                        }
	                      }



	               el.classList.add("resaltar");
	                var aux = document.getElementById("dialogPlugin:auxCopiar");
	                if(el.textContent!='' &amp;&amp; el.textContent!='ui-button'){
	                    aux.value = el.textContent;
	                }else if(el.firstChild!=null &amp;&amp; el.firstChild.value!=undefined){
	                    aux.value = el.firstChild.value;
	                }else if(el.value!=null &amp;&amp; el.value!=''){
	                    aux.value = el.value;
	                }else{
			          aux.value = '';
			        }

					if(aux.value!='' ){
            var multiple = false;
            var hijos = el.children;
			if((el.tagName == 'UL' || el.tagName == 'TABLE' || el.tagName == 'TR') &amp;&amp; hijos.length &gt; 1){
		            multiple = true;
		                  }else if(hijos.length &gt;= 1 ){
		                  	if(hijos.length==1  &amp;&amp; hijos[0].tagName=='DIV'){
		                  		hijos = hijos[0].children;
		                  	}
			                    for(i=0;i&lt;hijos.length;i++){
					              if(hijos[i].tagName!='SPAN' &amp;&amp; hijos[i].tagName!='LABEL'){
					                multiple=true;
					              }
			                    }

		                  }
                  var listaCm = document.getElementsByClassName('ui-contextmenu');
                  if(multiple){
                    for(i=0;i&lt;listaCm.length;i++){
                    	if(listaCm[i].style.display=='block'  &amp;&amp; !arrayCm.includes(listaCm[i])){
                    		arrayCm.push(listaCm[i]);
                    	}
	                	listaCm[i].classList.add("d-none");
					}
                  }else{
                  	for(i=0;i&lt;listaCm.length;i++){
                  		if(listaCm[i].style.display=='block'  &amp;&amp; !arrayCm.includes(listaCm[i])){
                    		arrayCm.push(listaCm[i]);
                    	}
	                	listaCm[i].classList.remove("d-none");
					}
					if(arrayCm.length&gt;1){
						arrayCm.pop();
						for(let i=0; i&lt;arrayCm.length; i++){
							arrayCm[i].style.display='none';
						}
					}
					arrayCm = [];
                  }

               }
	             }

            </h:outputScript>
	</h:form>
</h:body>

</f:view>
</html>
