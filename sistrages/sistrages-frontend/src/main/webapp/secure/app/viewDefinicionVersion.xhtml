<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui"
	xmlns:pe="http://primefaces.org/ui/extensions"
	template="../layout/mainLayout.xhtml">


	<f:metadata>
		<f:viewParam  name="ID" value="#{viewDefinicionVersion.id}"/>
	   <f:viewParam  name="pagina" value="#{viewDefinicionVersion.pagina}"/>
		<f:viewParam name="MODO_ACCESO" value="#{viewDefinicionVersion.modoAcceso}"/>
		<f:viewAction action="#{viewDefinicionVersion.init()}" />
	</f:metadata>


	<ui:define name="content">

		<p:outputPanel id="panel" styleClass="h100">

				<!-- Growl mensajes -->
				<p:growl id="growl" widgetVar="growl" showDetail="false" life="#{sessionBean.growlLife}" sticky="#{sessionBean.growlSticky}"  />

				<p:layout id="mainDefinicionVersion" styleClass="h100">

					<p:layoutUnit id="breadDefinicionVersionLayout" position="north" styleClass="body-color">

						<h:form id="breadDefinicionVersion" style="display:flex;" >
							<h:outputScript >

							  window.onload=function(){
							    let contextMenu =  document.getElementsByClassName('ui-contextmenu')[0];
								onVisible(contextMenu, () => eliminarResaltar());

								document.addEventListener('contextmenu', function(ev) {
							    	ev.preventDefault();
							    	getPos();
							    	return false;
								}, false);
							  }

								function eliminarResaltar(){
									let contextMenu =  document.getElementsByClassName('ui-contextmenu')[0];
							  		let elementos = document.getElementsByClassName('resaltar');
							  		if(contextMenu!=null &amp;&amp; contextMenu.style.display=='none' &amp;&amp; elementos.length &gt; 0){
										for(let i = 0; i &lt; elementos.length; i++){
											elementos[i].classList.remove('resaltar');
										}
							  		}
								}

								function onVisible(element, callback) {
								  new IntersectionObserver((entries, observer) => {
								    entries.forEach(entry => {
								      if(entry.intersectionRatio == 0) {
								        callback(element);
								      }
								    });
								  }).observe(element);
								}

							  function getPos(){
							 	var e = window.event;

							    var posX = e.clientX;
							    var posY = e.clientY;
							    var el = document.elementFromPoint(posX, posY);

							    let elementos = document.getElementsByClassName('resaltar');
							  		if(elementos.length &gt; 0){
										for(let i = 0; i &lt; elementos.length; i++){
											elementos[i].classList.remove('resaltar');
										}
							  		}

								el.classList.add("resaltar");
								var aux = document.getElementById("breadDefinicionVersion:auxCopiar");
								if(el.textContent!=''){
									aux.value = el.textContent;
								}else if(el.firstChild!=null){
									aux.value = el.firstChild.value;
								}else if(el.value!=null &amp;&amp; el.value!=''){
									aux.value = el.value;
								}

							 }

							</h:outputScript>
							<div style="width:100vw;">
								<p:breadCrumb homeDisplay="text" model="#{viewDefinicionVersion.breadCrumModel}"  />
							</div>

							<div style="padding:3px;display: inherit">
								<p:commandButton id="btnBloquear" value="#{msg['botones.bloquear']}" icon="fa fa-lock" actionListener="#{viewDefinicionVersion.bloquear}" process="@this" update="growl"  rendered="#{viewDefinicionVersion.permiteBloquear}"  style="margin-left:4px;width:170px;" >
			        					<p:confirm header="#{msg['confirm.titulo']}" message="#{msg['viewTramitesVersion.bloquear.aviso']}" icon="fa fa-question-circle fa-3x confirmar_icono"/>
			        			</p:commandButton>

								<p:commandButton id="btnPrevisualizarTramite"
									 	value="#{msg['botones.previsualizarTramite']}" icon="fa fa-eye"
										actionListener="#{viewDefinicionVersion.previsualizar()}" process="@this" style="margin-left:4px;width:170px;" >

									 <p:ajax event="dialogReturn" listener="#{viewDefinicionVersion.returnDialogoRefrescarTramite}" update="growl formArbol:arbol "/>
								</p:commandButton>
								<p:commandButton id="btnSTH"
									 	value="#{msg['botones.sth']}" icon="fa fa-paper-plane"
										actionListener="#{viewDefinicionVersion.sistrahelp()}" process="@this" style="margin-left:4px;width:170px;" rendered="#{viewDefinicionVersion.isHelpDesk()}">

									 <p:ajax event="dialogReturn" listener="#{viewDefinicionVersion.returnDialogoRefrescarTramite}" update="growl formArbol:arbol "/>
								</p:commandButton>
								<p:commandButton id="actualiza"
									 	value="btn"
										actionListener="#{viewDefinicionVersion.actualizar()}" process="@this"  update="@form :workDefinicionVersion growl formArbol:arbol" style="display:none"/>

							</div>
							<p:contextMenu for=":work">
						     	<p:menuitem value="#{msg['botones.copiar']}" icon="fa fa-clipboard" styleClass="w90" id="mnuCopy"  process="@this :breadDefinicionVersion:auxCopiar" update="growl" url="javascript:void(0)"/>
						    </p:contextMenu>
						    <pe:clipboard id="clipContextCopy" trigger="mnuCopy" action="copy" target="auxCopiar">
								<p:ajax event="success" listener="#{viewDefinicionVersion.copiadoCorr}" process="@this" update="@this growl"/>
						         <p:ajax event="error" listener="#{viewDefinicionVersion.copiadoErr}" update="@this growl"/>
						    </pe:clipboard>

						    <p:contextMenu id="mainCmH" widgetVar="mainCmH"  for=":header">
								<p:menuitem id="mnuCopyH" value="#{msg['botones.copiar']}" icon="fa fa-clipboard" styleClass="w90" process="@this :form:auxCopiar" update="growl" url="javascript:void(0)"/>
							</p:contextMenu>
							<pe:clipboard id="clipContextCopyH" trigger="mnuCopyH" action="copy" target="auxCopiar">
								<p:ajax event="success" listener="#{viewDefinicionVersion.copiadoCorr}" process="@this" update="@this growl"/>
								<p:ajax event="error" listener="#{viewDefinicionVersion.copiadoErr}" update="@this growl"/>
							</pe:clipboard>

							 <p:contextMenu id="mainCmF" widgetVar="mainCmF"  for=":footer">
								<p:menuitem id="mnuCopyF" value="#{msg['botones.copiar']}" icon="fa fa-clipboard" styleClass="w90" process="@this :form:auxCopiar" update="growl" url="javascript:void(0)"/>
							</p:contextMenu>
							<pe:clipboard id="clipContextCopyF" trigger="mnuCopyF" action="copy" target="auxCopiar">
								<p:ajax event="success" listener="#{viewDefinicionVersion.copiadoCorr}" process="@this" update="@this growl"/>
								<p:ajax event="error" listener="#{viewDefinicionVersion.copiadoErr}" update="@this growl"/>
							</pe:clipboard>

						    <p:inputText id="auxCopiar" value="#{viewDefinicionVersion.portapapeles}" style="padding:0px; opacity:0; width: 1px; height:1px; cursor:default;"/>
						</h:form>


					</p:layoutUnit>

					<p:layoutUnit id="indexDefinicionVersion" position="west" size="250">
						<h:form id="formArbol">
							<p:tree id="arbol" value="#{viewDefinicionVersion.root}" var="node" selectionMode="single" selection="#{viewDefinicionVersion.selectedNode}"  styleClass="sin-bordes h100 w100 arbolTramites" style="overflow:hidden" onNodeClick="javascript:triggerDblClickTree();">
								<p:treeNode>
									<h:outputText value="#{node}" />
								</p:treeNode>

								<p:ajax event="select" listener="#{viewDefinicionVersion.onNodeSelect}" update=":workDefinicionVersion :breadDefinicionVersion" delay="500"/>
							</p:tree>

							<p:commandButton process="@this" id="hiddenCommandEditar" styleClass="button no-display"  action="#{viewDefinicionVersion.rcDobleClickTree()}">
				      			   <p:ajax event="dialogReturn" listener="#{viewDefinicionVersion.returnDialogoRefrescarTramite}" update="@parent :workDefinicionVersion"  />
					        </p:commandButton>


						</h:form>
					</p:layoutUnit>

					<p:layoutUnit position="center">
						<p:outputPanel id="workDefinicionVersion" styleClass="h100 update">
						   <ui:include src="#{viewDefinicionVersion.opcionUrl}" />
						 </p:outputPanel>
					</p:layoutUnit>

				</p:layout>

		</p:outputPanel>

		<h:outputScript >

		  var timestampDblClick = 0;
		  var lastSelected = "";

	      function triggerDblClickTree()
	       {
	       		// console.log("triggerDblClickTree");

				var newSelected = $(".ui-state-highlight").text();

				// console.log(lastSelected + "-" + newSelected);

	       		// console.log('triggerDblClickTree');
	       		var ahora = Date.now();

				if (newSelected == lastSelected) {
		       		if ( (ahora - timestampDblClick &lt; 500)) {
		       			// console.log('dblClick');
		       			//rcDobleClickTree();
		       			document.getElementById("formArbol:hiddenCommandEditar").click();
		       		}
		       	}

	       		timestampDblClick = ahora;
	       		lastSelected = newSelected;
	      }

	      	function clickUpdate(){
					$("#breadDefinicionVersion\\:actualiza").click();
				}
	    </h:outputScript>


							<p:confirmDialog global="true" >
								<p:outputPanel styleClass="confirmar_botonera">
						        	<p:commandButton value="#{msg['botones.si']}" type="button" styleClass="ui-confirmdialog-yes boton-azul" icon="fa fa-check"  process="@form" />
						        	<p:commandButton value="#{msg['botones.no']}" type="button" styleClass="ui-confirmdialog-no" icon="fa fa-close" process="@this"/>
								</p:outputPanel>
						    </p:confirmDialog>

	</ui:define>

</ui:composition>
